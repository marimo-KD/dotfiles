[[plugins]]
repo = 'cohama/lexima.vim'
on_event='InsertEnter'


[[plugins]]
repo = "tyru/eskk.vim"
on_map = { ic = '<Plug>' }
hook_add = '''
  imap <C-j>  <Plug>(eskk:toggle)
  cmap <C-j>  <Plug>(eskk:toggle)
'''
hook_source = '''
  let g:eskk#directory = g:config_home . "/nvim/eskk"
  let g:eskk#dictionary = "~/SKK/skk-jisyo"
  let g:eskk#large_dictionary = "/usr/share/skk/SKK-JISYO.L"
  let g:egg_like_newline = 1
'''



# LSP
[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_ft = ['rust', 'cpp']
if = 'has("nvim")'
depends = ['impatient.nvim']
hook_source = '''
"lua << EOF
"  local nvim_lsp = require('lspconfig')
"  vim.lsp.handlers["textDocument/publishDiagnostics"] = vim.lsp.with(vim.lsp.diagnostic.on_publish_diagnostics, { virtual_text = false })
"EOF
lua << EOF
  require'lspconfig'.rust_analyzer.setup{}
  require'lspconfig'.clangd.setup{}
--  require'lspconfig'.pyls.setup{}
EOF
  if !(exists("g:use_ddc") && g:use_ddc)
    set omnifunc=v:lua.vim.lsp.omnifunc
  endif
  nnoremap <Space>gi <cmd>lua vim.lsp.buf.implemention()<CR>
  nnoremap <Space>f  <cmd>lua vim.lsp.buf.formatting()<CR>
  nnoremap <Space>h  <cmd>lua vim.lsp.buf.hover()<CR>
  nnoremap <Space>r  <cmd>lua vim.lsp.buf.rename()<CR>
'''


[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
on_command = 'Telescope'
depends = ['impatient.nvim', 'popup.nvim', 'plenary.nvim', 'nvim-web-devicons']
hook_add = '''
  nnoremap <Space>tg  <cmd>Telescope live_grep<CR>
  nnoremap <Space>tf <cmd>Telescope find_files<CR>
  nnoremap <Space>tb <cmd>Telescope buffers<CR>
'''
hook_post_source = '''
lua << END_LUA
  local actions = require('telescope.actions')
  require('telescope').setup{
    defaults = {
      vimgrep_arguments = {
        'rg',
        '--color=never',
        '--no-heading',
        '--with-filename',
        '--line-number',
        '--column',
        '--smart-case'
      },
      initial_mode = "normal",
      winblend = 0,
      color_devicons = true,
      file_previewer = require('telescope.previewers').vim_buffer_cat.new,
      grep_previewer = require('telescope.previewers').vim_buffer_vimgrep.new,
      qflist_previewer = require('telescope.previewers').vim_buffer_qflist.new,
      mappings = {
          n = {
            ["q"] = actions.close,
          },
      },
    }
  }
END_LUA
'''



[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'BufRead'
depends = ['impatient.nvim']
hook_source = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
    ensure_installed = 'all',
    highlight = {
        enable = true,
    },
    indent = {
      enable = true,
    },
}
EOF
'''




[[plugins]]
repo = 'nvim-lua/popup.nvim'
on_event = ['FocusLost','CursorHold']
depends = ['impatient.nvim', 'plenary.nvim']

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_event = ['FocusLost','CursorHold']
depends = ['impatient.nvim']

[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'
depends = ['impatient.nvim']

[[plugins]]
repo = 'lewis6991/impatient.nvim'
hook_source = '''
  lua package.cpath=package.cpath..';'..os.getenv("HOME")..'/.config/nvim/lua/?.so'
  lua require('impatient')
'''



[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_command = 'TableModeToggle'



[[plugins]]
repo = 'plytophogy/vim-virtualenv'
on_ft = 'python'
hook_source = '''
  let g:virtualenv_directory = '~/.local/share/virtualenvs'
'''


[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = 'markdown'
depends = 'vim-table-mode'
hook_source = '''
  let g:markdown_minlines = 100
  let g:markdown_fenced_languages = ['html', 'python', 'bash=sh', 'rust', 'cpp', 'c']
'''



[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_command = 'MarkdownPreview'
build = 'sh -c "cd app && yarn install"'




[[plugins]]
repo = 'rhysd/clever-f.vim'
on_map = { nxo = '<Plug>'}
hook_add = '''
  nmap f <Plug>(clever-f-f)
  xmap f <Plug>(clever-f-f)
  omap f <Plug>(clever-f-f)
  nmap F <Plug>(clever-f-F)
  xmap F <Plug>(clever-f-F)
  omap F <Plug>(clever-f-F)
  nmap t <Plug>(clever-f-t)
  xmap t <Plug>(clever-f-t)
  omap t <Plug>(clever-f-t)
  nmap T <Plug>(clever-f-T)
  xmap T <Plug>(clever-f-T)
  omap T <Plug>(clever-f-T)
'''
hook_source = '''
  let g:clever_f_smart_case=1
  let g:clever_f_use_migemo=1
'''



[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'rhysd/vim-operator-surround'
on_map = {n = '<Plug>'}
depends = 'vim-operator-user'
hook_add = '''
  nmap <silent>sa <Plug>(operator-surround-append)
  nmap <silent>sd <Plug>(operator-surround-delete)
  nmap <silent>sr <Plug>(operator-surround-replace)
'''
