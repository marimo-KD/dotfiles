[[plugins]]
repo = 'hrsh7th/nvim-compe'
on_event = 'InsertEnter'
depends = ['compe-tabnine', 'vim-vsnip', 'lexima.vim']
hook_source = '''
  set completeopt=menuone,noselect

  " NOTE: Order is important. You can't lazy loading lexima.vim.
  let g:lexima_no_default_rules = v:true
  call lexima#set_default_rules()
  inoremap <silent><expr> <C-Space> compe#complete()
  inoremap <silent><expr> <CR>      compe#confirm(lexima#expand('<LT>CR>', 'i'))
  inoremap <silent><expr> <C-e>     compe#close('<C-e>')
  inoremap <silent><expr> <C-f>     compe#scroll({ 'delta': +4 })
  inoremap <silent><expr> <C-d>     compe#scroll({ 'delta': -4 })

  let g:compe = {}
  let g:compe.enabled = v:true
  let g:compe.autocomplete = v:true
  let g:compe.debug = v:false
  let g:compe.min_length = 1
  let g:compe.preselect = 'enable'
  let g:compe.throttle_time = 0
  let g:compe.source_timeout = 200
  let g:compe.incomplete_delay = 200
  let g:compe.max_abbr_width = 100
  let g:compe.max_kind_width = 100
  let g:compe.max_menu_width = 100
  let g:compe.documentation = v:true
  
  let g:compe.source = {}
  let g:compe.source.path = v:true
  let g:compe.source.buffer = v:true
  let g:compe.source.calc = v:true
  let g:compe.source.nvim_lsp = v:true
  let g:compe.source.nvim_lua = v:true

  let g:compe.source.treesitter = v:true
  let g:compe.source.tabnine = v:true
  let g:compe.source.vsnip = v:true
'''

[[plugins]]
repo = 'tzachar/compe-tabnine'



[[plugins]]
repo = 'cohama/lexima.vim'



[[plugins]]
repo = 'hrsh7th/vim-vsnip'
build = 'sh -c "./install.sh"'



[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
on_command = 'Telescope'
depends = ['popup.nvim', 'plenary.nvim', 'nvim-web-devicons']
hook_add = '''
  nnoremap <Space>tg  <cmd>Telescope live_grep<CR>
  nnoremap <Space>tf <cmd>Telescope find_files<CR>
  nnoremap <Space>tb <cmd>Telescope buffers<CR>
'''
hook_post_source = '''
lua << END_LUA
  local actions = require('telescope.actions')
  require('telescope').setup{
    defaults = {
      vimgrep_arguments = {
        'rg',
        '--color=never',
        '--no-heading',
        '--with-filename',
        '--line-number',
        '--column',
        '--smart-case'
      },
      initial_mode = "normal",
      winblend = 0,
      color_devicons = true,
      file_previewer = require('telescope.previewers').vim_buffer_cat.new,
      grep_previewer = require('telescope.previewers').vim_buffer_vimgrep.new,
      qflist_previewer = require('telescope.previewers').vim_buffer_qflist.new,
      mappings = {
          n = {
            ["q"] = actions.close,
          },
      },
    }
  }
END_LUA
'''

[[plugins]]
repo = 'nvim-lua/popup.nvim'
on_event = ['FocusLost','CursorHold']
depends = 'plenary.nvim'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_event = ['FocusLost','CursorHold']



[[plugins]]
repo = 'kyazdani42/nvim-web-devicons'




[[plugins]]
repo = "tyru/eskk.vim"
on_map = { ic = '<Plug>' }
hook_add = '''
  imap <C-j>  <Plug>(eskk:toggle)
  cmap <C-j>  <Plug>(eskk:toggle)
'''
hook_source = '''
  let g:eskk#directory = g:config_home . "/nvim/eskk"
  let g:eskk#dictionary = "~/SKK/skk-jisyo"
  let g:eskk#large_dictionary = "/usr/share/skk/SKK-JISYO.L"
  let g:egg_like_newline = 1
'''



[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
on_event = 'BufRead'
hook_source = '''
lua <<EOF
require'nvim-treesitter.configs'.setup {
    ensure_installed = 'all',
    highlight = {
        enable = true,
    },
    indent = {
      enable = true,
    },
}
EOF
'''



[[plugins]]
repo = 'neovim/nvim-lspconfig'
hook_source = '''
lua << EOF
  local nvim_lsp = require('lspconfig')
  vim.lsp.handlers["textDocument/publishDiagnostics"] = vim.lsp.with(vim.lsp.diagnostic.on_publish_diagnostics, { virtual_text = false })
EOF
  nnoremap <Space>gi <cmd>lua vim.lsp.buf.implemention()<CR>
  nnoremap <Space>f  <cmd>lua vim.lsp.buf.formatting()<CR>
'''
[plugins.ftplugin]
bash = "lua require('lspconfig').bashls.setup{}"
sh = "lua require('lspconfig').bashls.setup{}"
c = "lua require('lspconfig').clangd.setup{}"
cpp = "lua require('lspconfig').clangd.setup{}"
rust = """
lua << EOF
  local capabilities = vim.lsp.protocol.make_client_capabilities()
  capabilities.textDocument.completion.completionItem.snippetSupport = true
  require('lspconfig').rust_analyzer.setup{
    capabilities = capabilities,
  }
EOF
"""
python = "lua require('lspconfig').pyls.setup{}"
vim = "lua require('lspconfig').vimls.setup{}"



[[plugins]]
repo = 'glepnir/lspsaga.nvim'
on_lua = 'lspconfig'
depends = 'nvim-lspconfig'
hook_source = '''
  lua require('lspsaga').init_lsp_saga()
  augroup lsp_show_diagnostics_under_cursor
    autocmd!
    autocmd CursorMoved * lua require('lspsaga.diagnostic').show_line_diagnostics()
  augroup END
  nnoremap <Space>gd <cmd>lua require('lspsaga.provider').preview_definition()<CR>
  nnoremap <Space>ca <cmd>lua require('lspsaga.codeaction').code_action()<CR>
  vnoremap <Space>ca <cmd>'<,'>lua require('lspsaga.codeaction').range_code_action()<CR>
  nnoremap <Space>r  <cmd>lua require('lspsaga.rename').rename()<CR>
  nnoremap <Space>h  <cmd>lua require('lspsaga.hover').render_hover_doc()<CR>
'''



[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
on_command = 'TableModeToggle'



[[plugins]]
repo = 'plytophogy/vim-virtualenv'
on_ft = 'python'
hook_source = '''
  let g:virtualenv_directory = '~/.local/share/virtualenvs'
'''


[[plugins]]
repo = 'tpope/vim-markdown'
on_ft = 'markdown'
depends = 'vim-table-mode'
hook_source = '''
  let g:markdown_minlines = 100
  let g:markdown_fenced_languages = ['html', 'python', 'bash=sh', 'rust', 'cpp', 'c']
'''



[[plugins]]
repo = 'iamcco/markdown-preview.nvim'
on_command = 'MarkdownPreview'
build = 'sh -c "cd app && yarn install"'




[[plugins]]
repo = 'rhysd/clever-f.vim'
on_map = { nxo = '<Plug>'}
hook_add = '''
  nmap f <Plug>(clever-f-f)
  xmap f <Plug>(clever-f-f)
  omap f <Plug>(clever-f-f)
  nmap F <Plug>(clever-f-F)
  xmap F <Plug>(clever-f-F)
  omap F <Plug>(clever-f-F)
  nmap t <Plug>(clever-f-t)
  xmap t <Plug>(clever-f-t)
  omap t <Plug>(clever-f-t)
  nmap T <Plug>(clever-f-T)
  xmap T <Plug>(clever-f-T)
  omap T <Plug>(clever-f-T)
'''
hook_source = '''
  let g:clever_f_smart_case=1
  let g:clever_f_use_migemo=1
'''



[[plugins]]
repo = 'monaqa/dial.nvim'
on_map = { nv = '<Plug>' }
hook_add = '''
  nmap <C-a> <Plug>(dial-increment)
  nmap <C-x> <Plug>(dial-decrement)
  vmap <C-a> <Plug>(dial-increment)
  vmap <C-x> <Plug>(dial-decrement)
  vmap g<C-a> <Plug>(dial-increment-additional)
  vmap g<C-x> <Plug>(dial-decrement-additional)
'''



[[plugins]]
repo = 'rhysd/vim-operator-surround'
on_map = {n = '<Plug>'}
depends = 'vim-operator-user'
hook_add = '''
  nmap <silent>sa <Plug>(operator-surround-append)
  nmap <silent>sd <Plug>(operator-surround-delete)
  nmap <silent>sr <Plug>(operator-surround-replace)
'''

[[plugins]]
repo = 'kana/vim-operator-user'
