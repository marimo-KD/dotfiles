# Core
[[plugins]]
repo = 'Shougo/ddu.vim'
on_func = 'ddu#start'
hook_add = '''
  " launcher
  nnoremap <Space>d <cmd>Ddu source<CR>
  " file
  nnoremap <Space>f <cmd>Ddu file_rec<CR>
  " buffer                                       
  nnoremap <Space>b <cmd>Ddu buffer<CR>
  " line                                         
  nnoremap <Space>l <cmd>Ddu line<CR>
  " live grep
  nnoremap <Space>g <cmd>call ddu#start({
  \ 'name': 'file',
  \ 'volatile': v:true,
  \ 'sources': [{'name': 'rg', 'options': {'matchers': []}}],
  \ 'uiParams': {
  \   'ff': {
  \     'ignoreEmpty': v:false,
  \     'autoResize': v:false,
  \     }
  \   },
  \ })<CR>
'''
hook_source = '''
  "ui
  call ddu#custom#patch_global({
  \ 'ui': 'ff',
  \ 'uiParams': {
  \   'ff': {
  \     'floatingBorder': 'rounded',
  \     'previewFloating': v:true,
  \     'displaySourceName': 'long',
  \     'split': 'floating',
  \     'prompt': '>',
  \     'winCol': &columns / 6,
  \     'winHeight': &lines / 2,
  \     'winRow': &lines / 4,
  \     'winWidth': &columns / 3 * 2,
  \     }
  \   }
  \ })
  "sources
  call ddu#custom#patch_global({
  \ 'sourceParams': {
  \   'rg': {
  \     'args': ['--json'],
  \     }
  \   }
  \ })
  "filter
  call ddu#custom#patch_global({
  \ 'sourceOptions': {
  \   '_': {
  \     'matchers': ['matcher_fzf'],
  \     },
  \   },
  \ })
  "kind default action
  call ddu#custom#patch_global({
  \ 'kindOptions': {
  \   'file': {
  \     'defaultAction': 'open',
  \     },
  \   'action': {
  \     'defaultAction': 'do',
  \     },
  \   'help': {
  \     'defaultAction': 'vsplit',
  \     },
  \   'source': {
  \     'defaultAction': 'execute',
  \     },
  \   },
  \ })
'''

# UI
[[plugins]]
repo = 'Shougo/ddu-ui-ff'
on_source = 'ddu.vim'
[plugins.ftplugin]
ddu-ff = '''
  setlocal cursorline
  nnoremap <buffer><silent> <CR>
  \ <Cmd>call ddu#ui#ff#do_action('itemAction')<CR>
  nnoremap <buffer><silent> <Space>
  \ <Cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
  nnoremap <buffer><silent> a
  \ <Cmd>call ddu#ui#ff#do_action('chooseAction')
  nnoremap <buffer><silent> p
  \ <Cmd>call ddu#ui#ff#do_action('preview')
  nnoremap <buffer><silent> i
  \ <Cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
  nnoremap <buffer><silent> x
  \ <Cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
  nnoremap <buffer><silent> q
  \ <Cmd>call ddu#ui#ff#do_action('quit')<CR>
  nnoremap <buffer><silent> <ESC>
  \ <Cmd>call ddu#ui#ff#do_action('quit')<CR>

  if b:ddu_ui_name ==# 'help'
    nnoremap <buffer><silent> v
    \ <cmd>call ddu#ui#ff#do_action('itemAction',
    \ {'name': 'vsplit'})<CR>
  else
    nnoremap <buffer><silent> v
    \ <Cmd>call ddu#ui#ff#do_action('itemAction',
    \ {'name': 'open', 'params': {'command': 'vsplit'}})<CR>
  endif
'''
ddu-ff-filter = '''
  inoremap <buffer><silent> <CR> <ESC><cmd>close<CR>
  nnoremap <buffer><silent> <CR> <ESC>close<CR>
  nnoremap <buffer><silent> q
  \ <Cmd>call ddu#ui#ff#do_action('quit')<CR>
  nnoremap <buffer><silent> <ESC>
  \ <Cmd>call ddu#ui#ff#do_action('quit')<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-commands.vim'
depends = ['ddu.vim']
on_cmd = ['Ddu']

# Filter
[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'
on_source = 'ddu.vim'

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'
on_source = 'ddu.vim'

# Source
[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-buffer'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-line'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-rg'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-action'
on_source = 'ddu.vim'
# NOTE: including action kind

[[plugins]]
repo = 'matsui54/ddu-source-help'
on_source = 'ddu.vim'
# NOTE: including help kind

[[plugins]]
repo = '4513ECHO/ddu-source-source'
on_source = 'ddu.vim'
# NOTE: including source kind

# Kind
[[plugins]]
repo = 'Shougo/ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-word'
on_source = 'ddu.vim'
