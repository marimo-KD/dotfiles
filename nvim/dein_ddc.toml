[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['denops.vim', 'context_filetype.vim']
on_event = 'InsertEnter'
hook_source = '''
  call ddc#custom#patch_global('sources', ['around', 'eskk'])
  call ddc#custom#patch_global('sourceOptions', {
    \ '_': {
    \   'matchers': ['matcher_head'],
    \   'sorters' : ['sorter_rank'],
    \   'converters': ['converter_remove_overlap']
    \ },
    \ 'around': {'mark': 'A' },
    \ 'eskk': {'mark': 'eskk', 'matchers': [], 'sorters': [], 'minAutoCompleteLength': 1},
    \ 'nvimlsp': {'mark': 'lsp', 'forceCompletionPattern': '\\.|:|->'},
    \ })
  call ddc#custom#patch_global('sourceParams', {
    \ 'nvimlsp': {'useIcon': v:true},
    \ })
  call ddc#custom#patch_filetype(
    \ ['rust', 'c', 'cpp', 'python'], 'sources',
    \ ['nvimlsp', 'vsnip', 'around', 'eskk']
    \ )
  call ddc#enable()
'''

[[plugins]]
repo = 'cohama/lexima.vim'
on_source = 'ddc.vim'



[[plugins]]
repo = 'hrsh7th/vim-vsnip'

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
depends = ['vim-vsnip']
on_source = 'ddc.vim'



# ddc sources
[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'nvim-lspconfig'

[[plugins]]
repo = 'matsui54/ddc-nvim-lsp-doc'
on_source = 'ddc-nvim-lsp'
hook_source = '''
  call ddc_nvim_lsp_doc#enable()
'''

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = ['vim', 'toml', 'help']
depends = 'ddc.vim'
hook_source = '''
    call ddc#custom#patch_filetype(
      \ ['vim', 'toml', 'help'], 'sources',
      \ ['necovim', 'around', 'eskk']
      \ )
'''


[[plugins]]
repo = "tyru/eskk.vim"
on_map = { ic = '<Plug>' }
on_source = 'ddc.vim'
hook_add = '''
  imap <C-j>  <Plug>(eskk:toggle)
  cmap <C-j>  <Plug>(eskk:toggle)
'''
hook_source = '''
  let g:eskk#directory = g:config_home . "/nvim/eskk"
  let g:eskk#dictionary = "~/SKK/skk-jisyo"
  let g:eskk#large_dictionary = "/usr/share/skk/SKK-JISYO.L"
  let g:egg_like_newline = 1
'''



# ddc matchers
[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'


# ddc sorters
[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'


# ddc converters
[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'
on_source = 'ddc.vim'


# LSP
[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_ft = ['rust', 'cpp']
depends = ['impatient.nvim', 'ddc.vim']
hook_source = '''
"lua << EOF
"  local nvim_lsp = require('lspconfig')
"  vim.lsp.handlers["textDocument/publishDiagnostics"] = vim.lsp.with(vim.lsp.diagnostic.on_publish_diagnostics, { virtual_text = false })
"EOF
lua << EOF
  require'lspconfig'.rust_analyzer.setup{}
  require'lspconfig'.clangd.setup{}
--  require'lspconfig'.pyls.setup{}
EOF
  nnoremap <Space>gi <cmd>lua vim.lsp.buf.implemention()<CR>
  nnoremap <Space>f  <cmd>lua vim.lsp.buf.formatting()<CR>
'''
