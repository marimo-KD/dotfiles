#{{{ Core
[[plugins]]
repo = 'Shougo/ddu.vim'
on_func = 'ddu#start'
hooks_file = '~/.config/nvim/rc/ddu.vim'
#}}}

#{{{ UI
[[plugins]]
repo = 'Shougo/ddu-ui-ff'
on_source = 'ddu.vim'
[plugins.ftplugin]
ddu-ff = '''
  setlocal cursorline
  nnoremap <buffer><silent> <CR>
  \ <cmd>call ddu#ui#ff#do_action('itemAction')<CR>
  nnoremap <buffer><silent> <Space>
  \ <cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
  nnoremap <buffer><silent> a
  \ <cmd>call ddu#ui#ff#do_action('chooseAction')<CR>
  nnoremap <buffer><silent> P
  \ <cmd>call ddu#ui#ff#do_action('togglePreview')<CR>
  nnoremap <buffer><silent> i
  \ <cmd>call ddu#ui#ff#do_action('openFilterWindow')<CR>
  nnoremap <buffer><silent> e
  \ <cmd>call ddu#ui#ff#do_action('expandItem', #{mode: 'toggle'})<CR>
  nnoremap <buffer><silent> l
  \ <cmd>call ddu#ui#ff#do_action('itemAction', #{name: 'narrow'})<CR>
  nnoremap <buffer><silent> x
  \ <cmd>call ddu#ui#ff#do_action('toggleSelectItem')<CR>
  nnoremap <buffer><silent> q
  \ <cmd>call ddu#ui#ff#do_action('quit')<CR>
  nnoremap <buffer><silent> <ESC>
  \ <cmd>call ddu#ui#ff#do_action('quit')<CR>

  if b:ddu_ui_name ==# 'help'
    nnoremap <buffer><silent> v
    \ <cmd>call ddu#ui#ff#do_action('itemAction',
    \ {'name': 'vsplit'})<CR>
  else
    nnoremap <buffer><silent> v
    \ <cmd>call ddu#ui#ff#do_action('itemAction',
    \ {'name': 'open', 'params': {'command': 'vsplit'}})<CR>
  endif
'''
ddu-ff-filter = '''
  inoremap <buffer><silent> <CR> <ESC><cmd>close<CR>
  nnoremap <buffer><silent> <CR> <ESC>close<CR>
  nnoremap <buffer><silent> q
  \ <cmd>call ddu#ui#ff#do_action('quit')<CR>
  nnoremap <buffer><silent> <ESC>
  \ <cmd>call ddu#ui#ff#do_action('quit')<CR>
'''

[[plugins]]
repo = 'Shougo/ddu-ui-filer'
on_source = 'ddu.vim'
[plugins.ftplugin]
ddu-filer = '''
  setlocal cursorline
  nnoremap <buffer><silent><expr> <CR>
  \ ddu#ui#get_item()->get('isTree', v:false) ?
  \ "<cmd>call ddu#ui#filer#do_action('expandItem', {'mode': 'toggle'})<CR>" :
  \ "<cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'open', 'params': {'command': 'vsplit'}})<CR>"

  nnoremap <buffer><silent> <ESC>
  \ <cmd>call ddu#ui#filer#do_action('quit')<CR>

  nnoremap <buffer><silent> q
  \ <cmd>call ddu#ui#filer#do_action('quit')<CR>

  nnoremap <buffer><silent> ..
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow', 'params': {'path': '..'}})<CR>

  nnoremap <buffer><silent> h
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow', 'params': {'path': '..'}})<CR>

  nnoremap <buffer><silent> l
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow'})<CR>

  nnoremap <buffer><silent> ~
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow', 'params': {'path': expand('~')}})<CR>

  nnoremap <buffer><silent> =
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'narrow', 'params': {'path': getcwd()})<CR>

  nnoremap <buffer><silent> d
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'delete'})<CR>

  nnoremap <buffer><silent> c
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'copy'})<CR>

  nnoremap <buffer><silent> r
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'rename'})<CR>

  nnoremap <buffer><silent> mv
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'move'})<CR>

  nnoremap <buffer><silent> t
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'newFile'})<CR>

  nnoremap <buffer><silent> mk
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'newDirectory'})<CR>

  nnoremap <buffer><silent> yy
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'yank'})<CR>

  nnoremap <buffer><silent> p
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'paste'})<CR>

  nnoremap <buffer><silent> P
  \ <cmd>call ddu#ui#filer#do_action('togglePreview')<CR>

  nnoremap <buffer><silent> u
  \ <cmd>call ddu#ui#filer#do_action('itemAction', {'name': 'undo'})<CR>

  nnoremap <buffer><silent> a
  \ <cmd>call ddu#ui#filer#do_action('chooseAction')<CR>

  nnoremap <buffer><silent> <Space>
  \ <cmd>call ddu#ui#filer#do_action('toggleSelectItem')<CR>

  nnoremap <buffer> !
  \ <cmd>call ddu#ui#do_action('updateOptions', #{
  \   sourceOptions: #{
  \     file: #{
  \       matchers: ToggleHidden('file'),
  \     },
  \   },
  \ })<CR>

function! ToggleHidden(name)
  return ddu#custom#get_current(b:ddu_ui_name)
        \ ->get('sourceOptions', {})
        \ ->get(a:name, {})
        \ ->get('matchers', [])
        \ ->empty() ? ['matcher_hidden'] : []
endfunction
'''


#}}}

[[plugins]]
repo = 'Shougo/ddu-commands.vim'
depends = ['ddu.vim']
on_cmd = ['Ddu']

#{{{ Filter
[[plugins]]
repo = 'Shougo/ddu-filter-matcher_substring'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_relative'
on_source = 'ddu.vim'

[[plugins]]
repo = 'hasundue/ddu-filter-zf'
on_source = 'ddu.vim'
build = 'deno task fetch'

[[plugins]]
repo = 'Milly/ddu-filter-kensaku'
on_source = 'ddu.vim'
depends = ['kensaku.vim']

[[plugins]]
repo = 'yuki-yano/ddu-filter-fzf'
on_source = 'ddu.vim'

[[plugins]]
repo = 'kyoh86/ddu-filter-converter_hl_dir'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-filter-matcher_hidden'
on_source = 'ddu.vim'
#}}}

#{{{ Source
[[plugins]]
repo = 'shun/ddu-source-buffer'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_old'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_point'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-file_rec'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-line'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-source-output'
on_source = 'ddu.vim'

[[plugins]]
repo = 'shun/ddu-source-rg'
on_source = 'ddu.vim'

[[plugins]]
repo = 'uga-rosa/ddu-source-lsp'
on_source = 'ddu.vim'
# NOTE: including lsp filter and kind

[[plugins]]
repo = 'Shougo/ddu-source-action'
on_source = 'ddu.vim'
# NOTE: including action kind

[[plugins]]
repo = 'matsui54/ddu-source-help'
on_source = 'ddu.vim'
# NOTE: including help kind

[[plugins]]
repo = '4513ECHO/ddu-source-source'
on_source = 'ddu.vim'
# NOTE: including source kind
#}}}

#{{{ Kind
[[plugins]]
repo = 'Shougo/ddu-kind-file'
on_source = 'ddu.vim'

[[plugins]]
repo = '4513ECHO/ddu-kind-url'
on_source = 'ddu.vim'

[[plugins]]
repo = 'Shougo/ddu-kind-word'
on_source = 'ddu.vim'
#}}}

# {{{ Column
[[plugins]]
repo = 'Shougo/ddu-column-filename'
on_source = 'ddu.vim'

[[plugins]]
repo = 'ryota2357/ddu-column-icon_filename'
on_source = 'ddu.vim'
#}}}
