[[plugins]]
repo = 'vim-denops/denops.vim'
on_event = ['CursorHold']

[[plugins]]
repo = 'vim-skk/skkeleton'
on_map = { ic = '<Plug>(skkeleton-toggle)' }
depends = ['denops.vim']
hook_add = '''
  imap <C-j> <Plug>(skkeleton-toggle)
  cmap <C-j> <Plug>(skkeleton-toggle)
'''
hook_source = '''
  call skkeleton#config(#{
    \ globalDictionaries : ['/nix/store/bi7qiz4h005vv01dgi8m0k9jj5jjl07y-skk-dicts-unstable-2020-03-24/share/SKK-JISYO.combined',''],
    \ eggLikeNewline: v:true,
    \ registerConvertResult: v:true,
    \ userJisyo: '~/SKK/skk-jisyo',
    \ })
  call skkeleton#register_kanatable('rom', {
    \ ',': ['，'],
    \ '.': ['。'],
    \ })
  augroup rc_skk
    autocmd!
    autocmd User skkeleton-enable-pre call s:skkeleton_pre()
    autocmd User skkeleton-enable-post lmap <buffer> l <Plug>(skkeleton-disable)
    autocmd User skkeleton-disable-pre call s:skkeleton_post()
  augroup END
  function! s:skkeleton_pre() abort
    let s:prev_buffer_config = ddc#custom#get_buffer()
    call ddc#custom#patch_buffer('sources', ['skkeleton'])
  endfunction
  function! s:skkeleton_post() abort
    call ddc#custom#set_buffer(s:prev_buffer_config)
  endfunction
'''

[[plugins]]
repo = 'lambdalisue/gin.vim'
depends = ['denops.vim']
on_cmd = ['Gin']
on_func = ['gin#component#branch#unicode', 'gin#component#traffic#unicode']

[[plugins]]
repo = 'lambdalisue/kensaku.vim'
depends = ['denops.vim']

[[plugins]]
repo = 'kat0h/bufpreview.vim'
depends = ['denops.vim']
build = 'deno task prepare'
on_cmd = ['PreviewMarkdown', 'PreviewMarkdownStop', 'PreviewMarkdownToggle']

[[plugins]]
repo = 'vim-denops/denops-shared-server.vim'
on_func = ['denops_shared_server#install', 'denops_shared_server#uninstall']
