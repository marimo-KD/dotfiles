[[plugins]]
repo = 'vim-denops/denops.vim'
on_event = ['CursorHold']
hook_add = '''
"let g:denops_server_addr = '127.0.0.1:32123'
let g:denops#server#deno_args = ['-q', '--no-lock', '-A', '--unstable-kv', '--unstable-ffi']
'''

[[plugins]]
repo = 'gamoutatsumi/dps-ghosttext.vim'
on_cmd = ['GhostStart']

[[plugins]]
repo = 'delphinus/skkeleton_indicator.nvim'
on_source = 'skkeleton'
lua_source = 'require("skkeleton_indicator").setup{}'

[[plugins]]
repo = 'vim-skk/skkeleton'
on_map = { ic = '<Plug>(skkeleton-toggle)' }
depends = ['denops.vim']
hook_add = '''
  inoremap <C-j> <Plug>(skkeleton-toggle)
  cnoremap <C-j> <Plug>(skkeleton-toggle)
  nnoremap <C-j> i<Plug>(skkeleton-toggle)
'''
hook_source = '''
  call skkeleton#config(#{
    \ globalDictionaries : map(['SKK-JISYO.L', 'SKK-JISYO.geo', 'SKK-JISYO.jinmei', 'SKK-JISYO.propernoun', 'SKK-JISYO.edict'], "'~/SKK/'->expand() . v:val"),
    \ eggLikeNewline: v:true,
    \ registerConvertResult: v:true,
    \ userDictionary: '~/SKK/skk-jisyo'->expand(),
    \ databasePath: '~/SKK/skkeleton.db'->expand(),
    \ sources: ['deno_kv', 'skk_dictionary'],
    \ completionRankFile: '~/SKK/skkeleton_rank.json'->expand(),
    \ })
  call skkeleton#register_kanatable('rom', {
    \ 'jj': 'escape',
    \ ',': ['、'],
    \ '.': ['。'],
    \ })
  augroup rc_skk
    autocmd!
    autocmd User skkeleton-enable-pre call s:skkeleton_pre()
    autocmd User skkeleton-enable-post lmap <buffer> l <Plug>(skkeleton-disable)
    autocmd User skkeleton-disable-pre call s:skkeleton_post()
  augroup END
  
  function! s:skkeleton_pre() abort
    let s:prev_buffer_config = ddc#custom#get_buffer()
    call ddc#custom#patch_buffer('sources', ['skkeleton'])
    call ddc#custom#patch_buffer('sourceOptions', #{_: #{keywordPattern: '[ァ-ヮア-ンー]+'}})
  endfunction
  function! s:skkeleton_post() abort
    call ddc#custom#set_buffer(s:prev_buffer_config)
  endfunction
'''

[[plugins]]
repo = 'lambdalisue/gin.vim'
depends = ['denops.vim']
on_cmd = ['Gin']
on_func = ['gin#component#branch#unicode', 'gin#component#traffic#unicode']

[[plugins]]
repo = 'lambdalisue/kensaku.vim'
depends = ['denops.vim']

[[plugins]]
repo = 'kat0h/bufpreview.vim'
depends = ['denops.vim']
build = 'deno task prepare'
on_cmd = ['PreviewMarkdown', 'PreviewMarkdownStop', 'PreviewMarkdownToggle']

[[plugins]]
repo = 'vim-denops/denops-shared-server.vim'
on_func = ['denops_shared_server#install', 'denops_shared_server#uninstall']
